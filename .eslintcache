[{"/Users/user/Desktop/redux-app/src/index.js":"1","/Users/user/Desktop/redux-app/src/reducer.js":"2","/Users/user/Desktop/redux-app/src/store.js":"3","/Users/user/Desktop/redux-app/src/App.js":"4","/Users/user/Desktop/redux-app/src/actions.js":"5","/Users/user/Desktop/redux-app/src/actionType.js":"6"},{"size":501,"mtime":1611504327527,"results":"7","hashOfConfig":"8"},{"size":1160,"mtime":1611607095403,"results":"9","hashOfConfig":"8"},{"size":313,"mtime":1611653642787,"results":"10","hashOfConfig":"8"},{"size":1333,"mtime":1611607159584,"results":"11","hashOfConfig":"8"},{"size":308,"mtime":1611586359430,"results":"12","hashOfConfig":"8"},{"size":120,"mtime":1611586079810,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"159q1vu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/redux-app/src/index.js",[],"/Users/user/Desktop/redux-app/src/reducer.js",[],"/Users/user/Desktop/redux-app/src/store.js",[],"/Users/user/Desktop/redux-app/src/App.js",["27","28","29","30","31"],"import logo from './logo.svg';\nimport './App.css';\nimport store from \"./store\";\nimport { unsubscribe } from \"./store\";\nimport { bugAdded, bugResolved } from \"./actions\";\nimport react, { useEffect, useState } from \"react\"\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [allbugs, setAllbugs] = useState([])\n  useEffect(() => {\n    setAllbugs(store.getState());\n  }, [store])\n\n  const unsubscribe = store.subscribe(() => {\n    setAllbugs(store.getState());\n  })\n\n  const resolveBug = () => {\n    store.dispatch(bugResolved(Number(id)));\n  }\n  const addBug = () => {\n    store.dispatch(bugAdded(description));\n  }\n  //const handleChange =()=> setId()\n\n  //unsubscribe();\n  return (\n    <div className=\"App\">\n\n      <input placeholder=\"enter bug id\" value={id} onChange={(e) => setId(e.target.value)}></input>\n      <button onClick={resolveBug}>\n        Resolve Bug\n      </button>\n\n      <input placeholder=\"enter bug id\" value={description} onChange={(e) => setDescription(e.target.value)}></input>\n      <button onClick={addBug}>\n        Add Bug\n      </button>\n      <div>\n        {allbugs.map(bug => (<div key={bug.id}><p>{bug.id}</p><p>{bug.description}</p> <p>{bug.resolved.toString()}</p><hr></hr></div> ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Desktop/redux-app/src/actions.js",[],"/Users/user/Desktop/redux-app/src/actionType.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":21},{"ruleId":"32","severity":1,"message":"37","line":6,"column":8,"nodeType":"34","messageId":"35","endLine":6,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":14,"column":6,"nodeType":"40","endLine":14,"endColumn":13,"suggestions":"41"},{"ruleId":"32","severity":1,"message":"42","line":16,"column":9,"nodeType":"34","messageId":"35","endLine":16,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["43"],"'unsubscribe' is assigned a value but never used.",{"desc":"44","fix":"45"},"Update the dependencies array to be: []",{"range":"46","text":"47"},[433,440],"[]"]