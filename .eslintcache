[{"/Users/user/Desktop/redux-app/src/store/configureStore.js":"1","/Users/user/Desktop/redux-app/src/App.js":"2","/Users/user/Desktop/redux-app/src/store/bug.js":"3","/Users/user/Desktop/redux-app/src/reportWebVitals.js":"4","/Users/user/Desktop/redux-app/src/store/projects.js":"5","/Users/user/Desktop/redux-app/src/store/reducers.js":"6","/Users/user/Desktop/redux-app/src/store/entities.js":"7"},{"size":486,"mtime":1611698675303,"results":"8","hashOfConfig":"9"},{"size":1820,"mtime":1611699467397,"results":"10","hashOfConfig":"9"},{"size":2710,"mtime":1611695882200,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1611500414360,"results":"12","hashOfConfig":"9"},{"size":447,"mtime":1611696998629,"results":"13","hashOfConfig":"9"},{"size":149,"mtime":1611699147262,"results":"14","hashOfConfig":"9"},{"size":200,"mtime":1611699069435,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"159q1vu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/redux-app/src/store/configureStore.js",[],"/Users/user/Desktop/redux-app/src/App.js",["31","32","33","34","35"],"/Users/user/Desktop/redux-app/src/store/bug.js",["36","37"],"import { createAction, createReducer, createSlice } from \"@reduxjs/toolkit\";\n\n//<-------------solution 3------------->\nlet lastId = 0;\nconst slice = createSlice({\n    name: 'bugs',\n    initialState: [],\n    reducers: {\n        //maps actions to action handlers\n        bugAdded: (bugs, action) => {\n            bugs.push({\n                id: ++lastId,\n                description: action.payload.description,\n                resolved: false\n            });\n        },\n        bugResolved: (bugs, action) => {\n            const index = bugs.findIndex(bug => bug.id === action.payload.id);\n            bugs[index].resolved = true;\n        }\n\n    }\n})\n\nexport const {bugAdded, bugResolved} = slice.actions;\n\nexport default slice.reducer;\n\n\n\n\n//<--------------solution 2------------------------>\n// //Action creators\n// export const bugAdded = createAction(\"bugAdded\");\n// export const bugResolved = createAction(\"bugResolved\");\n// export const bugRemoved = createAction(\"bugRemoved\");  \n\n// let lastId = 0;\n// export default createReducer([],{\n//     //key: value\n//     //actions: function\n//     [bugAdded.type]:(state, action) =>{\n//         state.push({\n//             id: ++lastId,\n//             description: action.payload.description,\n//             resolved: false\n//         });\n//     },\n\n//     [bugResolved.type]: (state, action) => {\n//         const index = state.findIndex(bug => bug.id === action.payload.id);\n//         state[index].resolved = true;\n//     }\n// })\n\n//<-----------solution 1--------------->\n// //Action types\n// const BUG_ADDED = \"bugAdded\";\n// const BUG_REMOVED = \"bugRemoved\"; \n// const BUG_RESOLVED = \"bugResolved\";\n\n// //Action creators\n// export function bugAdded(description) {\n//     return {\n//         type: BUG_ADDED,\n//         payload: {\n//             description\n//         }\n//     }\n// }\n// export const bugResolved = (id) => ({\n//     type: BUG_RESOLVED,\n//     payload: {\n//         id\n//     }\n// })\n\n\n// //Reducers \n// let lastId = 0;\n// export default function reducer(state = [], action) {\n//     switch (action.type) {\n//         case BUG_ADDED.type:\n//         console.log(action.payload)\n//             return [\n//                 ...state,\n//                 {\n//                     id: ++lastId,\n//                     description: action.payload.description,\n//                     resolved: false\n//                 }\n//             ];\n\n//         case BUG_REMOVED.type:\n//             return state.filter(bug => bug.id !== action.payload.id);\n\n//         case BUG_RESOLVED.type:\n//             return state.map(bug => bug.id !== action.payload.id ? bug : { ...bug, resolved: true })\n\n//         default:\n//             return state;\n//     }\n\n// }","/Users/user/Desktop/redux-app/src/reportWebVitals.js",[],"/Users/user/Desktop/redux-app/src/store/projects.js",[],"/Users/user/Desktop/redux-app/src/store/reducers.js",[],"/Users/user/Desktop/redux-app/src/store/entities.js",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":4,"column":10,"nodeType":"40","messageId":"41","endLine":4,"endColumn":21},{"ruleId":"38","severity":1,"message":"43","line":7,"column":8,"nodeType":"40","messageId":"41","endLine":7,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":16,"column":6,"nodeType":"46","endLine":16,"endColumn":13,"suggestions":"47"},{"ruleId":"38","severity":1,"message":"48","line":18,"column":9,"nodeType":"40","messageId":"41","endLine":18,"endColumn":20},{"ruleId":"38","severity":1,"message":"49","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":22},{"ruleId":"38","severity":1,"message":"50","line":1,"column":24,"nodeType":"40","messageId":"41","endLine":1,"endColumn":37},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["51"],"'unsubscribe' is assigned a value but never used.","'createAction' is defined but never used.","'createReducer' is defined but never used.",{"desc":"52","fix":"53"},"Update the dependencies array to be: []",{"range":"54","text":"55"},[566,573],"[]"]