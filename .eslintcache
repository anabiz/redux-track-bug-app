[{"/Users/user/Desktop/redux-app/src/index.js":"1","/Users/user/Desktop/redux-app/src/App.js":"2","/Users/user/Desktop/redux-app/src/reportWebVitals.js":"3","/Users/user/Desktop/redux-app/src/store/store.js":"4","/Users/user/Desktop/redux-app/src/store/bug.js":"5"},{"size":501,"mtime":1611504327527,"results":"6","hashOfConfig":"7"},{"size":1347,"mtime":1611675738692,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611500414360,"results":"9","hashOfConfig":"7"},{"size":325,"mtime":1611675534563,"results":"10","hashOfConfig":"7"},{"size":1014,"mtime":1611675470286,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"159q1vu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/redux-app/src/index.js",[],["25","26"],"/Users/user/Desktop/redux-app/src/App.js",["27","28","29","30","31"],"import logo from './logo.svg';\nimport './App.css';\nimport store from \"./store/store\";\nimport { unsubscribe } from \"./store/store\";\nimport { bugAdded, bugResolved } from \"./store/bug\";\nimport react, { useEffect, useState } from \"react\"\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [allbugs, setAllbugs] = useState([])\n  useEffect(() => {\n    setAllbugs(store.getState());\n  }, [store])\n\n  const unsubscribe = store.subscribe(() => {\n    setAllbugs(store.getState());\n  })\n\n  const resolveBug = () => {\n    store.dispatch(bugResolved(Number(id)));\n  }\n  const addBug = () => {\n    store.dispatch(bugAdded(description));\n  }\n  //const handleChange =()=> setId()\n\n  //unsubscribe();\n  return (\n    <div className=\"App\">\n\n      <input placeholder=\"enter bug id\" value={id} onChange={(e) => setId(e.target.value)}></input>\n      <button onClick={resolveBug}>\n        Resolve Bug\n      </button>\n\n      <input placeholder=\"enter bug id\" value={description} onChange={(e) => setDescription(e.target.value)}></input>\n      <button onClick={addBug}>\n        Add Bug\n      </button>\n      <div>\n        {allbugs.map(bug => (<div key={bug.id}><p>{bug.id}</p><p>{bug.description}</p> <p>{bug.resolved.toString()}</p><hr></hr></div> ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Desktop/redux-app/src/reportWebVitals.js",[],["32","33"],"/Users/user/Desktop/redux-app/src/store/store.js",[],"/Users/user/Desktop/redux-app/src/store/bug.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":4,"column":10,"nodeType":"40","messageId":"41","endLine":4,"endColumn":21},{"ruleId":"38","severity":1,"message":"43","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":14,"column":6,"nodeType":"46","endLine":14,"endColumn":13,"suggestions":"47"},{"ruleId":"38","severity":1,"message":"48","line":16,"column":9,"nodeType":"40","messageId":"41","endLine":16,"endColumn":20},{"ruleId":"34","replacedBy":"49"},{"ruleId":"36","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["53"],"'unsubscribe' is assigned a value but never used.",["51"],["52"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: []",{"range":"56","text":"57"},[447,454],"[]"]