[{"/Users/user/Desktop/redux-app/src/store/configureStore.js":"1","/Users/user/Desktop/redux-app/src/App.js":"2","/Users/user/Desktop/redux-app/src/store/bug.js":"3","/Users/user/Desktop/redux-app/src/reportWebVitals.js":"4","/Users/user/Desktop/redux-app/src/store/projects.js":"5","/Users/user/Desktop/redux-app/src/store/reducers.js":"6","/Users/user/Desktop/redux-app/src/store/entities.js":"7","/Users/user/Desktop/redux-app/src/index.js":"8"},{"size":486,"mtime":1611698675303,"results":"9","hashOfConfig":"10"},{"size":1918,"mtime":1611735308172,"results":"11","hashOfConfig":"10"},{"size":3071,"mtime":1611736866036,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1611500414360,"results":"13","hashOfConfig":"10"},{"size":457,"mtime":1611732793242,"results":"14","hashOfConfig":"10"},{"size":149,"mtime":1611699147262,"results":"15","hashOfConfig":"10"},{"size":200,"mtime":1611699069435,"results":"16","hashOfConfig":"10"},{"size":501,"mtime":1611504327527,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"159q1vu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/redux-app/src/store/configureStore.js",[],["36","37"],"/Users/user/Desktop/redux-app/src/App.js",["38","39","40","41","42"],"import logo from './logo.svg';\nimport './App.css';\nimport {store} from \"./store/configureStore\";\nimport { unsubscribe } from \"./store/configureStore\";\nimport { bugAdded, bugResolved,getUnresolvedBugs } from \"./store/bug\";\nimport { projectAdded } from \"./store/projects\";\nimport react, { useEffect, useState } from \"react\"\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [allbugs, setAllbugs] = useState([])\n  const [project, setProject] = useState(\"\")\n  useEffect(() => {\n    setAllbugs(store.getState().entities.bugs);\n  }, [store])\n\n  const unsubscribe = store.subscribe(() => {\n    setAllbugs(store.getState().entities.bugs);\n  })\n\n  const resolveBug = () => {\n    store.dispatch(bugResolved({id:Number(id)}));\n    console.log(getUnresolvedBugs(store.getState()))\n  }\n  const addBug = () => {\n    store.dispatch(bugAdded({description:description}));\n    setAllbugs(store.getState().entities.bugs);\n  }\n  const addProject = () => {\n    store.dispatch(projectAdded({name:project}));\n    console.log(store.getState());\n  }\n\n  //unsubscribe();\n  return (\n    <div className=\"App\">\n\n      <input placeholder=\"enter bug id\" value={id} onChange={(e) => setId(e.target.value)}></input>\n      <button onClick={resolveBug}>\n        Resolve Bug\n      </button>\n\n      <input placeholder=\"enter bug id\" value={description} onChange={(e) => setDescription(e.target.value)}></input>\n      <button onClick={addBug}>\n        Add Bug\n      </button>\n      \n      <input placeholder=\"name\" value={project} onChange={(e) => setProject(e.target.value)}></input>\n      <button onClick={addProject}>\n        Add project\n      </button>\n\n      <div>\n        {allbugs.length > 0 ? allbugs.map(bug => (<div key={bug.id}><p>{bug.id}</p><p>{bug.description}</p> <p>{bug.resolved.toString()}</p><hr></hr></div> )) : null}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Desktop/redux-app/src/store/bug.js",["43","44"],"/Users/user/Desktop/redux-app/src/reportWebVitals.js",[],"/Users/user/Desktop/redux-app/src/store/projects.js",[],"/Users/user/Desktop/redux-app/src/store/reducers.js",[],"/Users/user/Desktop/redux-app/src/store/entities.js",[],"/Users/user/Desktop/redux-app/src/index.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":21},{"ruleId":"49","severity":1,"message":"54","line":7,"column":8,"nodeType":"51","messageId":"52","endLine":7,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":16,"column":6,"nodeType":"57","endLine":16,"endColumn":13,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":18,"column":9,"nodeType":"51","messageId":"52","endLine":18,"endColumn":20},{"ruleId":"49","severity":1,"message":"60","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":22},{"ruleId":"49","severity":1,"message":"61","line":1,"column":24,"nodeType":"51","messageId":"52","endLine":1,"endColumn":37},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["64"],"'unsubscribe' is assigned a value but never used.","'createAction' is defined but never used.","'createReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: []",{"range":"67","text":"68"},[593,600],"[]"]