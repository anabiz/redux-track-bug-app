[{"/Users/user/Desktop/redux-app/src/store/configureStore.js":"1","/Users/user/Desktop/redux-app/src/App.js":"2","/Users/user/Desktop/redux-app/src/store/bug.js":"3","/Users/user/Desktop/redux-app/src/reportWebVitals.js":"4","/Users/user/Desktop/redux-app/src/store/projects.js":"5","/Users/user/Desktop/redux-app/src/store/reducers.js":"6","/Users/user/Desktop/redux-app/src/store/entities.js":"7","/Users/user/Desktop/redux-app/src/index.js":"8"},{"size":486,"mtime":1611698675303,"results":"9","hashOfConfig":"10"},{"size":1847,"mtime":1611700376954,"results":"11","hashOfConfig":"10"},{"size":2710,"mtime":1611695882200,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1611500414360,"results":"13","hashOfConfig":"10"},{"size":447,"mtime":1611696998629,"results":"14","hashOfConfig":"10"},{"size":149,"mtime":1611699147262,"results":"15","hashOfConfig":"10"},{"size":200,"mtime":1611699069435,"results":"16","hashOfConfig":"10"},{"size":501,"mtime":1611504327527,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"159q1vu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/redux-app/src/store/configureStore.js",[],["37","38"],"/Users/user/Desktop/redux-app/src/App.js",["39","40","41","42","43"],"import logo from './logo.svg';\nimport './App.css';\nimport {store} from \"./store/configureStore\";\nimport { unsubscribe } from \"./store/configureStore\";\nimport { bugAdded, bugResolved } from \"./store/bug\";\nimport { projectAdded } from \"./store/projects\";\nimport react, { useEffect, useState } from \"react\"\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [allbugs, setAllbugs] = useState([])\n  const [project, setProject] = useState(\"\")\n  useEffect(() => {\n    setAllbugs(store.getState().entities.bugs);\n  }, [store])\n\n  const unsubscribe = store.subscribe(() => {\n    setAllbugs(store.getState().entities.bugs);\n  })\n\n  const resolveBug = () => {\n    store.dispatch(bugResolved({id:Number(id)}));\n  }\n  const addBug = () => {\n    store.dispatch(bugAdded({description:description}));\n    setAllbugs(store.getState().entities.bugs);\n  }\n  const addProject = () => {\n    store.dispatch(projectAdded({name:project}));\n    console.log(store.getState());\n  }\n\n  //unsubscribe();\n  return (\n    <div className=\"App\">\n\n      <input placeholder=\"enter bug id\" value={id} onChange={(e) => setId(e.target.value)}></input>\n      <button onClick={resolveBug}>\n        Resolve Bug\n      </button>\n\n      <input placeholder=\"enter bug id\" value={description} onChange={(e) => setDescription(e.target.value)}></input>\n      <button onClick={addBug}>\n        Add Bug\n      </button>\n      \n      <input placeholder=\"name\" value={project} onChange={(e) => setProject(e.target.value)}></input>\n      <button onClick={addProject}>\n        Add project\n      </button>\n\n      <div>\n        {allbugs.length > 0 ? allbugs.map(bug => (<div key={bug.id}><p>{bug.id}</p><p>{bug.description}</p> <p>{bug.resolved.toString()}</p><hr></hr></div> )) : null}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Desktop/redux-app/src/store/bug.js",["44","45"],"import { createAction, createReducer, createSlice } from \"@reduxjs/toolkit\";\n\n//<-------------solution 3------------->\nlet lastId = 0;\nconst slice = createSlice({\n    name: 'bugs',\n    initialState: [],\n    reducers: {\n        //maps actions to action handlers\n        bugAdded: (bugs, action) => {\n            bugs.push({\n                id: ++lastId,\n                description: action.payload.description,\n                resolved: false\n            });\n        },\n        bugResolved: (bugs, action) => {\n            const index = bugs.findIndex(bug => bug.id === action.payload.id);\n            bugs[index].resolved = true;\n        }\n\n    }\n})\n\nexport const {bugAdded, bugResolved} = slice.actions;\n\nexport default slice.reducer;\n\n\n\n\n//<--------------solution 2------------------------>\n// //Action creators\n// export const bugAdded = createAction(\"bugAdded\");\n// export const bugResolved = createAction(\"bugResolved\");\n// export const bugRemoved = createAction(\"bugRemoved\");  \n\n// let lastId = 0;\n// export default createReducer([],{\n//     //key: value\n//     //actions: function\n//     [bugAdded.type]:(state, action) =>{\n//         state.push({\n//             id: ++lastId,\n//             description: action.payload.description,\n//             resolved: false\n//         });\n//     },\n\n//     [bugResolved.type]: (state, action) => {\n//         const index = state.findIndex(bug => bug.id === action.payload.id);\n//         state[index].resolved = true;\n//     }\n// })\n\n//<-----------solution 1--------------->\n// //Action types\n// const BUG_ADDED = \"bugAdded\";\n// const BUG_REMOVED = \"bugRemoved\"; \n// const BUG_RESOLVED = \"bugResolved\";\n\n// //Action creators\n// export function bugAdded(description) {\n//     return {\n//         type: BUG_ADDED,\n//         payload: {\n//             description\n//         }\n//     }\n// }\n// export const bugResolved = (id) => ({\n//     type: BUG_RESOLVED,\n//     payload: {\n//         id\n//     }\n// })\n\n\n// //Reducers \n// let lastId = 0;\n// export default function reducer(state = [], action) {\n//     switch (action.type) {\n//         case BUG_ADDED.type:\n//         console.log(action.payload)\n//             return [\n//                 ...state,\n//                 {\n//                     id: ++lastId,\n//                     description: action.payload.description,\n//                     resolved: false\n//                 }\n//             ];\n\n//         case BUG_REMOVED.type:\n//             return state.filter(bug => bug.id !== action.payload.id);\n\n//         case BUG_RESOLVED.type:\n//             return state.map(bug => bug.id !== action.payload.id ? bug : { ...bug, resolved: true })\n\n//         default:\n//             return state;\n//     }\n\n// }","/Users/user/Desktop/redux-app/src/reportWebVitals.js",[],"/Users/user/Desktop/redux-app/src/store/projects.js",[],"/Users/user/Desktop/redux-app/src/store/reducers.js",[],"/Users/user/Desktop/redux-app/src/store/entities.js",[],"/Users/user/Desktop/redux-app/src/index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":21},{"ruleId":"50","severity":1,"message":"55","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":16,"column":6,"nodeType":"58","endLine":16,"endColumn":13,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"60","line":18,"column":9,"nodeType":"52","messageId":"53","endLine":18,"endColumn":20},{"ruleId":"50","severity":1,"message":"61","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":22},{"ruleId":"50","severity":1,"message":"62","line":1,"column":24,"nodeType":"52","messageId":"53","endLine":1,"endColumn":37},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["65"],"'unsubscribe' is assigned a value but never used.","'createAction' is defined but never used.","'createReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: []",{"range":"68","text":"69"},[575,582],"[]"]