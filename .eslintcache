[{"/Users/user/Desktop/redux-app/src/App.js":"1","/Users/user/Desktop/redux-app/src/store/configureStore.js":"2","/Users/user/Desktop/redux-app/src/store/middleware/toast.js":"3"},{"size":2903,"mtime":1611759316253,"results":"4","hashOfConfig":"5"},{"size":981,"mtime":1611759149264,"results":"6","hashOfConfig":"5"},{"size":214,"mtime":1611759042527,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"159q1vu",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Desktop/redux-app/src/App.js",["15","16","17","18","19","20"],"import logo from './logo.svg';\nimport './App.css';\nimport {store} from \"./store/configureStore\";\nimport { unsubscribe } from \"./store/configureStore\";\nimport { bugAdded, bugResolved,getUnresolvedBugs, bugAssignedToUser, getBugsByUser } from \"./store/bug\";\nimport { projectAdded } from \"./store/projects\";\nimport { userAdded } from \"./store/users\"\nimport react, { useEffect, useState } from \"react\";\nimport Toast from \"./toast/toast\";\nimport { toast } from 'react-toastify';\n\nconst addUser = (user) => {\n  store.dispatch(userAdded({name:user}));\n  console.log(store.getState().entities.users);\n}\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [allbugs, setAllbugs] = useState([]);\n  const [project, setProject] = useState(\"\");\n  const [user, setUser] = useState(\"\")\n  useEffect(() => {\n    setAllbugs(store.getState().entities.bugs);\n  }, [store])\n\n  const unsubscribe = store.subscribe(() => {\n    setAllbugs(store.getState().entities.bugs);\n    console.log(\"changes occured\");\n  })\n \n  const notify = () => toast(`bug ${id} resolved!`);\n\n  const resolveBug = () => {\n    store.dispatch(bugResolved({id:Number(id)}));\n    console.log(getUnresolvedBugs(store.getState()));\n    notify();\n  }\n  const addBug = () => {\n    store.dispatch(bugAdded({description:description}));\n    unsubscribe();\n    setAllbugs(store.getState().entities.bugs);\n    store.dispatch({\n      type:\"error\",\n      payload:{\n        message:\"An error occured\"\n      }\n    })\n    store.dispatch((dispatch, getState)=>{\n      //call an Api\n      //when the promise is resolved => dispatch()\n      dispatch({type: \"bugsReceived\", bugs:[1,2,3]});\n      console.log(getState())\n      //if promise failed => dispatch()\n    })\n  }\n  const addProject = () => {\n    store.dispatch(projectAdded({name:project}));\n    console.log(store.getState());\n  }\n\n  //unsubscribe();\n  return (\n    <div className=\"App\">\n\n      <input placeholder=\"enter bug id\" value={id} onChange={(e) => setId(e.target.value)}></input>\n      <button onClick={resolveBug}>\n        Resolve Bug\n      </button>\n\n      <input placeholder=\"enter bug id\" value={description} onChange={(e) => setDescription(e.target.value)}></input>\n      <button onClick={addBug}>\n        Add Bug\n      </button>\n      \n      <input placeholder=\"name\" value={project} onChange={(e) => setProject(e.target.value)}></input>\n      <button onClick={addProject}>\n        Add project\n      </button>\n\n      <input placeholder=\"name\" value={user} onChange={(e) => setUser(e.target.value)}></input>\n      <button onClick={() => addUser(user)}>\n        Add User\n      </button>\n\n      <div>\n        {allbugs.length > 0 ? allbugs.map(bug => (<div key={bug.id}><p>{bug.id}</p><p>{bug.description}</p> <p>{bug.resolved.toString()}</p><hr></hr></div> )) : null}\n      </div>\n      <Toast />\n    </div>\n   \n  );\n}\n\nexport default App;\n","/Users/user/Desktop/redux-app/src/store/configureStore.js",["21"],"/Users/user/Desktop/redux-app/src/store/middleware/toast.js",["22"],{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"27","line":4,"column":10,"nodeType":"25","messageId":"26","endLine":4,"endColumn":21},{"ruleId":"23","severity":1,"message":"28","line":5,"column":51,"nodeType":"25","messageId":"26","endLine":5,"endColumn":68},{"ruleId":"23","severity":1,"message":"29","line":5,"column":70,"nodeType":"25","messageId":"26","endLine":5,"endColumn":83},{"ruleId":"23","severity":1,"message":"30","line":8,"column":8,"nodeType":"25","messageId":"26","endLine":8,"endColumn":13},{"ruleId":"31","severity":1,"message":"32","line":25,"column":6,"nodeType":"33","endLine":25,"endColumn":13,"suggestions":"34"},{"ruleId":"23","severity":1,"message":"35","line":6,"column":8,"nodeType":"25","messageId":"26","endLine":6,"endColumn":12},{"ruleId":"23","severity":1,"message":"36","line":1,"column":10,"nodeType":"25","messageId":"26","endLine":1,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'unsubscribe' is defined but never used.","'bugAssignedToUser' is defined but never used.","'getBugsByUser' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["37"],"'func' is defined but never used.","'store' is defined but never used.",{"desc":"38","fix":"39"},"Update the dependencies array to be: []",{"range":"40","text":"41"},[907,914],"[]"]